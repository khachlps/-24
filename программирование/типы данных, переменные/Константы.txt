Что такое константа понятно из её названия - что-то, значение чего мы можем только прочитать и не можем изменить: при попытке изменить получим ошибку компиляции. 
Задать константу можно двумя способами:
1) Как переменную, указав перед типом данных слово const: const тип_данных имя = значение;.
	Пример: const byte myConst = 10;. 
  По сути это будет обычная переменная, но её значение нельзя поменять. 
  Особенности:
  а) Занимает место в оперативной памяти, но может быть оптимизирована (вырезана) компилятором, если используется просто как значение.
  б) Имеет адрес в памяти, по которому к ней можно обратиться.
  в) Вычисления с ней не оптимизируются и чаще всего выполняются точно так же, как с обычными переменными.
  г) Компилятор выдаст ошибку, если имя константы совпадает с именем другой переменной в программе.

2) При помощи директивы #define, без знака равенства и точки с запятой в конце: #define имя значение. Пример: #define BTN_PIN 10. 
Работает так: указанное имя буквально заменяется в тексте программы на указанное значение. 
Такая дефайн-константа:
	Не занимает места в оперативной памяти, а хранится во Flash памяти как часть кода программы.
	Не имеет адреса в оперативной памяти.
	Вычисления с такими константами оптимизируются и выполняются быстрее, так как это просто цифры.
	Если имя дефайн-константы совпадёт с именем другого "объекта" в программе или даже в библиотеке - работа может быть непредсказуемой: можно получить невнятную ошибку компиляции, либо программа может просто работать некорректно!
	Дефайн буквально заменяет текст в коде программы, это довольно опасная штука.

Во избежание проблем нужно называть дефайн-константы максимально уникальными именами.
Можно добавлять к ним префиксы, например вместо PERIOD сделать MY_PERIOD и так далее.